#!/usr/bin/env bash
set -e
. "$NGINX_MANAGER_WORKDIR/common"

cli_help_deploy() {
  echo -e "${BOLD}Usage:${RESET} ${LIGHT_GREEN}ssl${RESET} <mail> <staging> <domains>${RESET}

${BOLD}Examples:${RESET} 
  ${GRAY}Create a new SSL certificate for 'example.com'${RESET}
  ${LIGHT_GREEN}ssl hello@example.com 1 example.com${RESET}"
  exit 1
}

[ "$#" -lt 6 ] && cli_help_deploy

MAIL=$1
STAGING=$2
DOMAINS=${@:6}
RSA_KEY_SIZE=4096
DATA_PATH="$NGINX_MANAGER_WORKDIR/data/certbot"
SSL_PATH="$NGINX_MANAGER_WORKDIR/conf/live/$DOMAINS"

if [ ! -d "$SSL_PATH" ]; then
  cli_info "Creating folder for certbot data."
  mkdir -p "$SSL_PATH"
fi

if [ -d "$DATA_PATH" ]; then
  cli_info "Existing data found for $DOMAINS."
  read -p "Continue and replace existing certificate? (y/N) " decision
  if [ "$decision" != "Y" ] && [ "$decision" != "y" ]; then
    exit
  fi
fi

if [ ! -e "$DATA_PATH/conf/options-ssl-nginx.conf" ] || [ ! -e "$DATA_PATH/conf/ssl-dhparams.pem" ]; then
  cli_info "Downloading recommended TLS parameters..."
  mkdir -p "$DATA_PATH/conf"
  curl -s https://raw.githubusercontent.com/certbot/certbot/master/certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf > "$DATA_PATH/conf/options-ssl-nginx.conf"
  curl -s https://raw.githubusercontent.com/certbot/certbot/master/certbot/certbot/ssl-dhparams.pem > "$DATA_PATH/conf/ssl-dhparams.pem"
  echo
fi

cli_info "Creating dummy certificate for $DOMAINS..."
TARG_PATH="/etc/letsencrypt/live/$DOMAINS"

if [ ! -d "$TARG_PATH" ]; then
  mkdir -p "$TARG_PATH"
fi

docker compose run --rm --entrypoint "\
  openssl req -x509 -nodes -newkey rsa:$RSA_KEY_SIZE -days 1\
    -keyout '$TARG_PATH/privkey.pem' \
    -out '$TARG_PATH/fullchain.pem' \
    -subj '/CN=localhost'" certbot

cli_info "Starting nginx..."
docker compose up --force-recreate -d nginx

cli_info "Deleting dummy certificate for $DOMAINS..."
docker compose run --rm --entrypoint "\
  rm -rf /etc/letsencrypt/live/$DOMAINS && \
  rm -rf /etc/letsencrypt/archive/$DOMAINS && \
  rm -rf /etc/letsencrypt/renewal/$DOMAINS.conf" certbot

cli_info "Requesting Let's Encrypt certificate for $DOMAINS..."

DOMAIN_ARGS=""
for domain in $DOMAINS; do
  DOMAIN_ARGS="$DOMAIN_ARGS -d $domain"
done

case "$MAIL" in
  "") email_arg="--register-unsafely-without-email" ;;
  *) email_arg="--email $MAIL" ;;
esac

if [ "$STAGING" != "0" ]; then
  STAGING_ARG="--staging"
fi

docker compose run --rm --entrypoint "\
  certbot certonly --webroot -w /var/www/certbot \
    $email_arg \
    $STAGING_ARG \
    $DOMAIN_ARGS \
    --rsa-key-size $RSA_KEY_SIZE \
    --agree-tos \
    --force-renewal" certbot

cli_success "Issued certificate(s) for $DOMAINS."

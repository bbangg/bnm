#!/usr/bin/env bash
set -e
. "$NGINX_MANAGER_WORKDIR/common"

cli_help_deploy() {
  echo -e "${BOLD}Usage:${RESET} ${LIGHT_GREEN}delete${RESET} <domain>${RESET}

${BOLD}Examples:${RESET} 
  ${GRAY}delete the domain 'example.com'${RESET}
  ${LIGHT_GREEN}delete${RESET} example.com"
  exit 1
}

[ ! -n "$1" ] && cli_help_deploy

DOMAIN=$1
FILE_NAME="${DOMAIN}.conf"
AVAILABLE_CONF="$NGINX_MANAGER_WORKDIR/data/nginx/conf.d/sites-available/${FILE_NAME}"
ENABLED_CONF="$NGINX_MANAGER_WORKDIR/data/nginx/conf.d/sites-enabled/${FILE_NAME}"
LOGS_PATH="$NGINX_MANAGER_WORKDIR/data/nginx/logs/${DOMAIN}"
VHOST_PATH="$NGINX_MANAGER_WORKDIR/data/www/vhosts/${DOMAIN}"

if [ -d "$LOGS_PATH" ]; then
    cli_info "Removing logs folder."
    rm -rf "$LOGS_PATH"
    docker compose exec nginx rm "/var/log/nginx/${DOMAIN}"
fi

if [ -f "$AVAILABLE_CONF" ]; then
    cli_info "Removing configuration file."
    rm -rf "$AVAILABLE_CONF"
    docker compose exec nginx rm "/etc/nginx/conf.d/sites-available/${FILE_NAME}"
fi

if [ -f "$ENABLED_CONF" ]; then
    cli_info "Removing symlink."
    rm -rf "$ENABLED_CONF"
    docker compose exec nginx rm "/etc/nginx/conf.d/sites-enabled/${FILE_NAME}"
fi

if [ -d "$VHOST_PATH" ]; then
    cli_info "Removing vhost folder."
    rm -rf "$VHOST_PATH"
    docker compose exec nginx rm "/var/www/vhosts/${DOMAIN}"
fi

cli_success "Domain ${DOMAIN} has been deleted."